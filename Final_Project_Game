//speed
//1
//postion
//x y

//boxes
//size
//position
//x y

//Creating Global Array for Obstacles / Defining not overlap object turns false value.
var notOverLap = false;
var obstacles = [];

// Defining the Player Shape
var player = {
  x: 20,
  y: 20,
  width: 5,
  height: 5,
}

//var win; Drawing the Win Square 

function genWin() {
  win = {
    x: random(200, width - 50),
    y: random(200, height - 50),
    width: random(10, 30),
    height: random(10, 30),

  }
}

// Creating Random Rectangles with this Function
function genObstacle() {
  return {
    x: random(50, width - 50),
    y: random(50, height - 50),
    width: random(0, 150),
    height: random(0, 150)
  }


}

//Defines to edges of the rectangle Top,Bot,Right,Left
function draw_rect(r) {
  rect(r.x, r.y, r.width, r.height)
}


//Checks to see if rectangle 1 and 2 overlap then returns as false, but if overlap - returns as true 
function overlap(r1, r2) {
  if (r1.y + r1.height < r2.y) {
    // r1 is on top of r2
    return false;
  }
  if (r1.y > r2.y + r2.height) {
    // r1 is underneath r2 
    return false;
  }
  if (r1.x + r1.width < r2.x) {
    // r1 is on the left side of r2
    return false;
  }
  if (r2.x + r2.width < r1.x) {
    // r1 is on the right side of r2
    return false;
  }
  // Otherwise r1 and r2 overlap
  return true;
}

//Checks Array within canvas - if player overlaps with obsticle - returns as true - overlabswithobsticle sim
function overlapsWithObstacles(placeholder) {
  for (var i = 0; i < obstacles.length; i++) {
    if (overlap(placeholder, obstacles[i])) {
      return true;
    }
  }
  return false;
}

//Function to generate objects, and if NOT overlap with object, draw a rectangle
function generateMap() {
  obstacles = [];
  for (var i = 0; i < 1000; i++) {
    newObstacle = genObstacle();
    newWin = genWin();

    if (!overlapsWithObstacles(newObstacle)) {
      obstacles.push(newObstacle);
    }
    //  if (overlapsWithObstacles(newWin)) {
    //    // obstacles.push(newWin);
    // genWin();
    //    }else {
    //    notOverLap =true;
    //    }

  }
}

//Drawing Rectangle Win - and not to overlab with Rectangles
function drawWin() {
  if (notOverLap) {
    draw_rect(win);
    fill(255, 250, 0.200);
  }
}

//Draws Objects when start program
function setup() {
  createCanvas(windowWidth, windowHeight);
  generateMap();
}



function draw() {

  background(220);



  fill(255, 255, 200)


  //drawWin();

  draw_rect(win)
  fill(255, 250, 0.200)

  draw_rect(player);
  fill(20, 75, 150)


//Drawing Rectangles for the Arrary function
  for (i = 0; i < obstacles.length; i++) {
    draw_rect(obstacles[i]);
  }


  // Draw Player


  // Move Player
  if (keyIsDown(UP_ARROW)) {
    player.y = player.y - 1
  }

  if (keyIsDown(DOWN_ARROW)) {
    player.y = player.y + 1
  }


  if (keyIsDown(LEFT_ARROW)) {
    player.x = player.x - 1
  }

  if (keyIsDown(RIGHT_ARROW)) {
    player.x = player.x + 1
  }

  
  //If player overlaps with opsticle - move player to corner and generate a new map.
  if (overlapsWithObstacles(player)) {
    player.x = 10;
    player.y = 10;
    generateMap();
  }

//If player overlaps with, with win object - end program and show you win text.
  if (overlap(player, win)) {
    fill(255, 250, 0.200)
    textSize(60)
    text("YOU WIN!!", width / 2, height / 2);

    noLoop()
  }

}

//GameOver

//d1 = int(dist(playerX,playerY, w1, 50));

//let d1 = int(dist(playerX,playerY, w1, 50)); 
//if (d1 < (w1 + w3) / 2) {


//text("GAME OVER", width / 2, height / 2);



//     //Read Input to update play positions
//     if (keyIsDown(UP_ARROW)) {
//       rightY -= playerSpeed;

//     }

//     if (keyIsDown(DOWN_ARROW)) {
//       rightY += playerSpeed;

//     }

//       if (keyIsDown(LEFT_ARROW)) {
//       width -= playerSpeed;

//     }

//     if (keyIsDown(RIGHT_ARROW)) {
//       rightY += playerSpeed;

//     }
